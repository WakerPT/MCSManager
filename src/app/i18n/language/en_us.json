{
  "common": {
    "title": "Title"
  },
  "app": {
    "developInfo": "Unable to start! This is a developmenet project used by MCSManager developers.\nPlease go to https://mcsmanager.com/ for installation instructions.\nIf you insist to run this project in development mode, please manually create the following directory: public, src/public, put frontend static file in it to run.",
    "panelStarted": "Panel started.",
    "reference": "Project reference: https://github.com/mcsmanager",
    "host": "Access address: http://localhost:{{port}}",
    "portTip": "You need to open daemon port and port {{port}} for public access.",
    "exitTip": "Use Ctrl+C to close this program.",
    "httpSetupError": "The port may already be in use or the network device is unavailable."
  },
  "permission": {
    "forbidden": "Insufficient permission",
    "forbiddenTokenError": "Failed to verify token (Token), access denied.",
    "xmlhttprequestError": "Unable to find request head x-requested-with: xmlhttprequest",
    "apiError": "Wrong key",
    "forbiddenInstance": "[Forbidden] [Middleware] Incorrect parameters or illegal access.",
    "tooFast": "Too many requests in a short time, please try again later."
  },
  "systemRemoteService": {
    "nodeCount": "Remote nodes: {{n}}",
    "loadDaemonTitle": "Attempting to read local daemon {{localKeyFilePath}}",
    "autoCheckDaemon": "Local daemon detected, trying to fetch key and port...",
    "error": "Unable to load configuration from local daemon, please configure the daemon manually. Visit https://docs.mcsmanager.com/ for more information."
  },
  "systemUser": {
    "userCount": "Local usersï¼š{{n}}"
  },
  "router": {
    "user": {
      "invalidUserName": "Invalid username format",
      "invalidPassword": "Invalid password format",
      "existsUserName": "Username already exist.",
      "deleteFailure": "Unable to delete user data",
      "passwordCheck": "Password must contains the following: uppercase letter, lowercase letter, numbers, and a length between 9 and 36.",
      "installed": "Unable to install panel: already installed. For reinstallation, backup and delete data folder."
    },
    "instance": {
      "createError": "Failed to create instance."
    },
    "file": {
      "off": "The system administrator has choosen to restrict file management function for all users."
    },
    "schedule": {
      "invalidName": "Invalid task name"
    },
    "login": {
      "ban": "Your IP was blocked for 10 minutes due to multiple authentication failure.",
      "nameOrPassError": "Incorrect username or password.",
      "init": "[Installation] Initializing administrator account: {{userName}}",
      "installed": "Unable to install panel: already installed. For reinstallation, backup and delete data folder."
    }
  },
  "daemonInfo": {
    "connect": "Remote node {{- v}} connected",
    "disconnect": "Remote node {{- v}} disconnected",
    "connectError": "Error connecting to remote node:{{- v}} ",
    "authSuccess": "Remote node {{- v}} token verification succeed.",
    "authFailure": "Remote node {{- v}} token verification failed.",
    "authError": "Remote node {{- v}} token verification error.",
    "closed": "Actively disconnect from the remote node {{- v}} ",
    "resetConnect": "User request to reconnect all available remote nodes, reconnecting...",
    "replaceConnect": "User initiated a duplicate connection request, resetting the connection...",
    "tryConnect": "Trying to connect remote node.",
    "setLanguage": "Set node language."
  }
}
